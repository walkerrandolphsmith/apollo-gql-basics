events {}

http {
    # don't send the nginx version number in error pages and Server header
    server_tokens off;

    upstream app {
        server app:3000 max_fails=3 fail_timeout=30s;
    }

    upstream api {
        server api:8080 max_fails=3 fail_timeout=30s;
    }

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/xml+rss application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    server {
        listen              80 default_server;
        server_name         _;
        return 301 https://$host$request_uri;
    }

    server {
        listen              443 ssl http2;
        server_name         localhost;
        keepalive_timeout   70;

        ssl_certificate     /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;  # check ssl3.0 for availability across majority of browsers
        ssl_prefer_server_ciphers on;
        ssl_ciphers         HIGH:!aNULL:!MD5;  # update to better ciphers

        add_header Strict-Transport-Security "max-age=6000; includeSubdomains; preload";

        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            break;
        }

        location /graphql/ {
            proxy_pass http://api/graphql;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location ~* \.(eot|otf|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin *;
        }
    }
}
